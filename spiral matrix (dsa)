class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
       int n = matrix[0].size() - 1;
        int m = matrix.size() - 1;
       vector<int>ans;
        int top= 0 ;
        int right = n ;
        int bottom = m ;
        int left = 0 ;

       while( top <= bottom  && left <= right){
        //top row
        for( int i = left ; i <= right ; i++){
             ans.push_back(matrix[top][i]);
        }
        top++;
        for( int i = top ; i <= bottom ; i++){
            ans.push_back(matrix[i][right]);
        }
        right--;
        if( top <= bottom){
            //bottom row 
            for( int i = right ; i >= left ; i--){
                ans.push_back(matrix[bottom][i]);
            }
            bottom--;
        }
        if( left <= right){
            //left coloum 
            for( int i = bottom ; i >= top ; i--){
                ans.push_back(matrix[i][left]);
            }
            left++;
        }
       } 
       return ans ;
            
}
};
